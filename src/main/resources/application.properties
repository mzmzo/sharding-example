#spring.profiles.active=mssql
spring.profiles.active=mysql

#spring.jpa.properties.hibernate.hbm2ddl.auto=create
spring.jpa.properties.hibernate.show_sql=true

#t_order
sharding.jdbc.config.sharding.tables.t_order.actual-data-nodes=ds_0.t_order_$->{0..1}
sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2}
sharding.jdbc.config.sharding.tables.t_order.key-generator-column-name=order_id

#t_order_item
sharding.jdbc.config.sharding.tables.t_order_item.actual-data-nodes=ds_0.t_order_item_$->{[0,1]}
sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_item_id
sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item_$->{order_item_id % 2}
sharding.jdbc.config.sharding.tables.t_order_item.key-generator-column-name=order_item_id

eseIds=[1,2]
#t_user
sharding.jdbc.config.sharding.tables.t_user.actual-data-nodes=ds_0.t_user_$->{${eseIds}}
sharding.jdbc.config.sharding.tables.t_user.table-strategy.standard.sharding-column=ese_id
sharding.jdbc.config.sharding.tables.t_user.table-strategy.standard.precise-algorithm-class-name=com.example.sharding.algorithm.EnterpriseShardingAlgorithm
sharding.jdbc.config.sharding.tables.t_user.key-generator-column-name=id
